/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vddaluong;

/**
 *
 * @author Nguyễn Văn Hải Long
 */
import java.awt.*;    // Sử dụng đồ họa và màu sắc của AWT
import javax.swing.*; // // Sử dụng các thành phần và vùng chứa của Swing
 
/**
 * A Bouncing Ball: Running animation via a custom thread
 */
public class Hinhtron extends JFrame {
   // Định nghĩa các hằng số có tên 
   private static final int CANVAS_WIDTH = 640;
   private static final int CANVAS_HEIGHT = 480;
   private static final int UPDATE_INTERVAL = 50; // milliseconds
 
   private DrawCanvas canvas;  //canvas vẽ (một lớp bên trong mở rộng JPanel)
   
   // Các thuộc tính của đối tượng chuyển động
   private int x = 100;     // top-left (x, y)
   private int y = 100;
   private int size = 250;  // kích thước
   private int xSpeed = 3;  // tốc độ di chuyển theo hướng x và y 
   private int ySpeed = 5;  // dịch chuyển mỗi bước trong x và y 
 
   // Khối khởi tạo để thiết lập các thành phần GUI và trình xử lý sự kiện
   public Hinhtron() {
      canvas = new DrawCanvas();
      canvas.setPreferredSize(new Dimension(CANVAS_WIDTH, CANVAS_HEIGHT));
      this.setContentPane(canvas);
      this.setDefaultCloseOperation(EXIT_ON_CLOSE);
      this.pack();
      this.setTitle("Bong nay");
      this.setVisible(true);
 
      // // Tạo một chuỗi mới để chạy cập nhật thường xuyên
      Thread updateThread = new Thread() {
         @Override
         public void run() {
            while (true) {
               update();   // cập nhật vị trí x và y
               repaint();  // Làm mới JFrame. Đã gọi lại paintComponent ()
               try {
                  // Trì hoãn và tạo cơ hội cho luồng khác chạy
                  Thread.sleep(UPDATE_INTERVAL);  // tính theo mili giây
               } catch (InterruptedException ignore) {}
            }
         }
      };
      updateThread.start(); // Gọi lại run ()
   }
 
   // Cập nhật vị trí (x, y) của đối tượng chuyển động
   public void update() {
      x += xSpeed;
      y += ySpeed;
      if (x > CANVAS_WIDTH - size || x < 0) {
         xSpeed = -xSpeed;
      }
      if (y > CANVAS_HEIGHT - size || y < 0) {
         ySpeed = -ySpeed;
      }
   }
 
   // Xác định lớp bên trong DrawCanvas, là một JPanel được sử dụng cho lớp vẽ tùy chỉnh
   class DrawCanvas extends JPanel {
      @Override
      public void paintComponent(Graphics g) {
         super.paintComponent(g);  // // sơn nền
         setBackground(Color.BLACK);
         g.setColor(Color.BLUE);
         g.fillOval(x, y, size, size);  // vẽ một hình tròn
      }
   }
 
   // Phương thức chính của hệ thống
   public static void main(String[] args) {
      // Chạy mã GUI trong chuỗi Sự kiện-Điều phối để đảm bảo an toàn cho chuỗi 
      SwingUtilities.invokeLater(new Runnable() {
         @Override
         public void run() {
            new Hinhtron(); // Để hàm tạo thực hiện công việc
         }
      });
   }
}